name: Build
on:
  push:
    paths:
    - .github/workflows/build.yaml
    - cmd/*
    - internal/*
    - pkg/*
    - flake.lock
    - flake.nix
    - go.mod
    - go.sum
    - shell.nix
  pull_request:
    types:
    - synchronize
    - reopened
    - opened
    paths-ignore:
    - .github/workflows/build.yaml
    - cmd/*
    - internal/*
    - pkg/*
    - flake.lock
    - flake.nix
    - go.mod
    - go.sum
    - shell.nix
env:
  GOLANG_VERSION: 1.21
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v4
    - name: setup golang
      uses: actions/setup-go@v3
      with:
        go-version: ${{ env.GOLANG_VERSION }}
    - name: set golang environment variables
      id: golang
      uses: wwmoraes/actions/golang/env@master
    - name: restore modules
      uses: actions/cache/restore@v3
      id: module-cache
      with:
        path: ${{ steps.golang.outputs.GOMODCACHE }}
        key: ${{ runner.os }}-modules-${{ hashFiles('go.sum') }}
        restore-keys: |
          ${{ runner.os }}-modules-${{ hashFiles('go.sum') }}
          ${{ runner.os }}-modules-
    - name: download modules
      if: steps.module-cache.outputs.cache-hit != 'true'
      run: go mod download
    - name: restore build
      uses: actions/cache/restore@v3
      id: build-cache
      with:
        path: ${{ steps.golang.outputs.GOCACHE }}
        key: ${{ runner.os }}-build-${{ hashFiles('**/*.go') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ hashFiles('**/*.go') }}
          ${{ runner.os }}-build-
    - name: install nix
      uses: DeterminateSystems/nix-installer-action@main
    - name: check flake
      uses: DeterminateSystems/flake-checker-action@main
    - name: install environment
      run: nix develop -c true
    - name: cache nix
      uses: DeterminateSystems/magic-nix-cache-action@main
    - name: build
      run: nix develop .#build -c go build -o ./bin/ ./cmd/site/...
    - name: deliver
      uses: actions/upload-artifact@v3
      with:
        name: site-binary
        path: bin/site
    - name: save build
      uses: actions/cache/save@v3
      with:
        path: ${{ steps.golang.outputs.GOCACHE }}
        key: ${{ runner.os }}-build-${{ hashFiles('**/*.go') }}
    - name: save modules
      uses: actions/cache/save@v3
      if: always()
      with:
        path: ${{ steps.golang.outputs.GOMODCACHE }}
        key: ${{ runner.os }}-modules-${{ hashFiles('go.sum') }}
