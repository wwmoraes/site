$toggle-border-width: 0;
$toggle-padding: 0;
$toggle-bar-height: 4px;
$toggle-width: 28px;
$toggle-spacing: 6px;
$toggle-offset: $toggle-spacing + $toggle-bar-height;
$toggle-background-color: transparent;
$toggle-shadow-color: $darkest-color;

input[type="checkbox"].toggle {
  display: none;
}

label.toggle {
  cursor: pointer;
  z-index: 9999;
  display: block;
  border-radius: 10%;
  box-sizing: border-box;
  background-color: $toggle-background-color;
  height: $toggle-bar-height * 3 + ($toggle-padding + $toggle-spacing + $toggle-border-width) * 2;
  width: ($toggle-width + ($toggle-border-width + $toggle-padding) * 2);
  padding: ($toggle-offset + $toggle-padding) $toggle-padding 0;
  border: $toggle-border-width solid $lightest-color;

  span {
    height: $toggle-bar-height;
    width: $toggle-width;
    border-radius: ($toggle-bar-height / 2);
    background-color: $lightest-color;
    position: relative;
    display: block;
    transition: all .2s ease-in-out;
    box-shadow: 0 0 4px 0 $toggle-shadow-color;

    &::before {
      top: (-1 * $toggle-offset);
      visibility: visible;
    }

    &::after {
      top: $toggle-offset;
    }

    &::before,
    &::after {
      height: $toggle-bar-height;
      width: $toggle-width;
      border-radius: ($toggle-bar-height / 2);
      background-color: $lightest-color;
      position: absolute;
      content: "";
      transition: all .2s ease-in-out;
      box-shadow: 0 0 4px 0 $toggle-shadow-color;
    }
  }
}

@mixin toggle($id) {
  // target container
  .#{$id} {
    visibility: hidden;
    opacity: 0;
    transition: all .2s ease-in-out;
    position: fixed;
    top: 0;
    width: 100vw;
    z-index: 999;
  }

  input[type=checkbox]##{$id} {
    border: none;

    &::before {
      display: none;
    }

    &:focus {
      outline: none;
    }
  }

  input[type=checkbox]##{$id}.toggle:checked {
    // target container state when toggle is on
    &~.#{$id} {
      opacity: 1;
      visibility: visible;
    }

    // label state when toggle is on
    &~label[for=#{$id}].toggle span {
      background: transparent;
      box-shadow: none;

      &::before,
      &::after {
        box-shadow: none;
      }

      &::before {
        opacity: 1;
        transform: rotate(45deg) translate(7px, 7px);
      }

      &::after {
        transform: rotate(-45deg) translate(7px, -7px);
      }
    }
  }

  label[for=#{$id}].toggle {
    opacity: .8;
    position: fixed;
    right: 1rem;
    top: 1rem;
  }

  @media (min-width: 992px) {
    .#{$id} {
      left: 0;
      min-height: 100vh;
      opacity: 1;
      position: fixed;
      top: 0;
      visibility: visible;
      width: 20rem;
      z-index: unset;
    }

    label[for=#{$id}].toggle {
      display: none;
    }
  }
}

@include toggle(app-header);
