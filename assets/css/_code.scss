// Code type map
$code-type-map: (
  // Custom code type
  language-bash: 'Bash',
  language-c: 'C',
  language-cs: 'C#',
  language-cpp: 'C++',
  language-clojure: 'Clojure',
  language-coffeescript: 'CoffeeScript',
  language-css: 'CSS',
  language-dart: 'Dart',
  language-diff: 'Diff',
  language-erlang: 'Erlang',
  language-go: 'Go',
  language-go-html-template: 'Go HTML Template',
  language-groovy: 'Groovy',
  language-haskell: 'Haskell',
  language-html: 'HTML',
  language-http: 'HTTP',
  language-xml: 'XML',
  language-java: 'Java',
  language-js: 'JavaScript',
  language-javascript: 'JavaScript',
  language-json: 'JSON',
  language-kotlin: 'Kotlin',
  language-latex: 'LaTeX',
  language-less: 'Less',
  language-lisp: 'Lisp',
  language-lua: 'Lua',
  language-makefile: 'Makefile',
  language-markdown: 'Markdown',
  language-matlab: 'Matlab',
  language-objectivec: 'Objective-C',
  language-php: 'PHP',
  language-perl: 'Perl',
  language-python: 'Python',
  language-r: 'R',
  language-ruby: 'Ruby',
  language-rust: 'Rust',
  language-scala: 'Scala',
  language-scss: 'Scss',
  language-shell: 'Shell',
  language-sql: 'SQL',
  language-swift: 'Swift',
  language-tex: 'TeX',
  language-toml: 'TOML',
  language-ts: 'TypeScript',
  language-typescript: 'TypeScript',
  language-vue: 'Vue',
  language-yml: 'YAML',
  language-yaml: 'YAML',
  ) !default;

code {
  color: $code-color-dark;
  display: inline-block;
  font-family: $code-font-family;
  font-size: $code-font-size;
  max-width: 100%;
  padding: 0 .4rem;

  @include line-break(anywhere);
  @include overflow-wrap(break-word);
}

code,
pre,
.highlight table,
.highlight tr,
.highlight td {
  background: $code-background-color-dark;
}

pre {
  margin: 0;

  @include tab-size(4);

  code {
    padding: 0;
  }

  img {
    min-height: 1em;
    max-height: 1.2em;
    vertical-align: text-bottom;
  }
}

.highlight {
  font-family: $code-font-family;
  font-size: $code-font-size;
  line-height: 1.4em;
  margin: .5rem 0;

  .table-wrapper {
    >table,
    >table thead,
    >table tr,
    >table td {
      margin: 0;
      padding: 0;
      border: none !important;
      white-space: nowrap;
    }
  }

  >.chroma {
    position: relative;

    .code-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      box-sizing: border-box;
      width: 100%;
      font-family: $global-font-family;
      font-weight: bold;
      color: $code-info-color-dark;
      background: darken($code-background-color-dark, 6%);

      &:hover {
        cursor: pointer;
      }

      .code-title {
        width: 100%;
        padding: .4rem;
      }

      .code-title::after {
        padding-left: .2rem;
        content: 'Code';
      }

      @each $type,
      $text in $code-type-map {
        &.#{$type} .code-title::after {
          content: $text;
        }
      }
    }

    .lntd:first-child {
      min-width: 1.6rem;
      text-align: right;
    }

    .lntd:last-child {
      width: 100%;

      pre {
        @include max-content(min-width);
      }
    }

    .ln {
      padding-right: .75rem;
    }

    .hl {
      display: block;
      background-color: darken($code-background-color-dark, 5%);
    }

    .ln,
    .lnt {
      color: $global-font-secondary-color-dark;
    }

    .arrow {
      padding: 0 .2rem;

      @include transition(transform 0.2s ease);
    }

    .ellipses {
      padding: .4rem;
    }

    .copy {
      display: none;
      padding: .4rem;

      &:hover {
        cursor: pointer;
        color: $global-link-hover-color-dark;
      }
    }

    .table-wrapper {
      max-height: 0;
      overflow-y: hidden;
    }

    &.open {
      .code-header {
        background: darken($code-background-color-dark, 3%);
      }

      .table-wrapper {
        max-height: $max-length;
      }

      .arrow {
        @include transform(rotate(90deg));
      }

      .ellipses {
        display: none;
      }

      .copy {
        display: inline;
      }
    }
  }

  /* Comment */
  .c,
  /* CommentHashbang */
  .ch,
  /* CommentMultiline */
  .cm,
  /* CommentSingle */
  .c1,
  /* CommentSpecial */
  .cs,
  /* CommentPreproc */
  .cp,
  /* CommentPreprocFile */
  .cpf {
    font-style: italic
  }

  /* GenericUnderline */
  .gl {
    text-decoration: underline
  }

  @each $class,
  $color in $code-highlight-color-map-dark {
    .#{$class} {
      color: $color;
    }
  }
}

@supports (font-variation-settings: normal) {
  code {
    font-family: $code-font-family-vf;
  }

  .highlight {
    font-family: $code-font-family-vf;

    >.chroma {
      .code-header {
        font-family: $global-font-family-vf;
      }
    }
  }
}
